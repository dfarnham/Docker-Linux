#!/usr/bin/env perl
# Copyright (c) Dave Farnham
#
# MD5 or SHA sums
#
# Program Name:   md5
# Primary Author: Dave Farnham
# Last Revised:   $Id: md5,v 1.1 2002/08/22 21:52:10 farnham Exp $
#
# dwf -- initial
# Tue May 12 20:46:50 MDT 1998
#
# dwf -- added -terse option
# Thu Aug 15 14:10:44 MDT 2002
#
# dwf -- add SHA support
# Wed Feb  6 14:53:02 MST 2019

use strict;
use Digest::MD5;
use Digest::SHA;
use FileHandle;
use Getopt::Long qw(:config auto_abbrev);

my ($optTerse, $optSilent, $optHelp);
GetOptions ('r|terse'      => \$optTerse,
            'silent|quiet' => \$optSilent,
            'help'         => \$optHelp) or usage();
usage() if $optHelp;

my $bname = substr($0, rindex($0, "/") + 1);
my $context;
if ($bname eq "md5") {
    $context = new Digest::MD5 or die;
} elsif ($bname eq "sha") {
    $context = Digest::SHA->new('sha256') or die;
} else {
    usage();
}

if (@ARGV) {
    my $fh = new FileHandle;
    foreach my $file (@ARGV) {
        $fh->open($file) or die "Can't read file \"$file\": $!\n";
        $context->reset();
        $context->addfile($fh);
        print uc($bname) . " ($file) = " unless $optTerse || $optSilent;
        print $context->hexdigest();
        print "  $file" if $optTerse;
        print "\n";
        $fh->close();
    }
} else {
    $context->addfile(*STDIN);
    print $context->hexdigest, "\n";
}
exit 0;



sub usage {
    my $bname = substr($0, rindex($0, "/") + 1);
    print STDERR "md5|sha [-(r|terse)|-(silent|quiet)] [File] ...\n";
    exit 1;
}
